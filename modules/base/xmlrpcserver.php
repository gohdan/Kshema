<?php

include_once("../../config.php");

ini_set('error_reporting', $config['base']['error_reporting']);
error_reporting($config['base']['error_reporting']);
if ($config['base']['error_reporting'])
	ini_set('display_errors', 1);
else
	ini_set('display_errors', 0);

include_once($config['base']['doc_root']."/modules/base/index.php");
include_once($config['base']['doc_root']."/modules/db/index.php");
if (in_array("bbcpanel", $config['modules']['installed']))
	include_once($config['base']['doc_root']."/modules/bbcpanel/index.php");
if (in_array("bills", $config['modules']['installed']))
	include_once($config['base']['doc_root']."/modules/bills/index.php");
include_once($config['base']['doc_root']."/libs/xmlrpc/xmlrpc.inc");
include_once($config['base']['doc_root']."/libs/xmlrpc/xmlrpc_wrappers.inc");
include_once($config['base']['doc_root']."/libs/xmlrpc/xmlrpcs.inc");
connect_2db ($db_user, $db_password, $db_host, $db_name);


	/**
	* Used to test usage of object methods in dispatch maps and in wrapper code
	*/
	class xmlrpc_server_methods_container
	{
		/**
		* Method used to test logging of php warnings generated by user functions.
		*/
		function phpwarninggenerator($m)
		{
			$a = $b; // this triggers a warning in E_ALL mode, since $b is undefined
			return new xmlrpcresp(new xmlrpcval(1, 'boolean'));
		}

	    /**
	     * Method used to testcatching of exceptions in the server.
	     */
	    function exceptiongenerator($m)
	    {
	        throw new Exception("it's just a test", 1);
	    }
	}

	$get_state_sig=array(array($xmlrpcInt, $xmlrpcString));
	$get_state_doc='Returns site state';
	function get_state($m)
	{
		global $config;
		global $xmlrpcArray;

		$v=$m->getParam(0);
		$password = $v -> scalarval();

		$state = 1;

		if ($password == $config['bbcpanel']['password'])
			write_file_log("get_state: password matches");
		else
			write_file_log("get_state: password doesn't match");
	
		$r = new xmlrpcresp(new xmlrpcval($state, "int"));
		return $r;
	}

	$get_open_modules_sig=array(array($xmlrpcArray, $xmlrpcString));
	$get_open_modules_doc='Returns satellite open modules';
	function get_open_modules($m)
	{
		global $config;
		global $xmlrpcArray;

		$v=$m->getParam(0);
		$password = $v -> scalarval();

		if ($password == $config['bbcpanel']['password'])
		{
			write_file_log("get_open_modules: password matches");
			$modules = new xmlrpcval();

			$modules_all = array_merge($config['modules']['core'], $config['modules']['installed']);

			foreach($modules_all as $k => $v)
				if (isset($config[$v]['xmlrpc_use']) && $config[$v]['xmlrpc_use'])
				{
					$t = array();
					$t[] = new xmlrpcval(
						array(
							"name" => new xmlrpcval($v, "string")
						), "struct");
					$modules->addArray($t);
				}
		}
		else
		{
			write_file_log("get_open_modules: password doesn't match");
			$modules = array();
		}
		
		$r = new xmlrpcresp($modules);
		return $r;
	}

	/* === get_config === */
	$get_config_sig=array(array($xmlrpcArray, $xmlrpcString, $xmlrpcString));
	$get_config_doc='Returns satellite config';
	function get_config($m)
	{
		global $config;
		global $xmlrpcArray;

		$v=$m->getParam(0);
		$password = $v -> scalarval();

		$v=$m->getParam(1);
		$table = $v -> scalarval();

		if ($password == $config['bbcpanel']['password'])
		{
			write_file_log("get_config: password matches");
			$conf = new xmlrpcval();

			$sql_query = "SELECT * FROM `".mysql_real_escape_string($table)."`";
			$result = exec_query($sql_query);
			while ($row = mysql_fetch_array($result))
			{
				$t = array();
				$t[] = new xmlrpcval(
					array(
						"id" => new xmlrpcval(stripslashes($row['id']), "string"),
						"name" => new xmlrpcval(stripslashes($row['name']), "string"),
						"descr" => new xmlrpcval(stripslashes($row['descr']), "string"),
						"value" => new xmlrpcval(stripslashes($row['value']), "string")
					), "struct");
				$conf->addArray($t);
			}
		}
		else
		{
			write_file_log("get_config: password doesn't match");
			$conf = array();
		}
		
		$r = new xmlrpcresp($conf);
		return $r;
	}
	/* === end: get_config === */

	/* === sections_update === */
	$sections_update_sig = array(array($xmlrpcArray, $xmlrpcString));
	$sections_update_doc = "Forces sections update";
	function sections_update($m)
	{
		global $config;
		$v = $m -> getParam(0);
		$password = $v -> scalarval();
		if ($password == $config['bbcpanel']['password'])
		{
			write_file_log("sections_update: password matches");
			$result = bills_sections_update();
		}
		else
		{
			write_file_log("sections_update: password doesn't match");
			$result = "";
		}
		return new xmlrpcresp(new xmlrpcval($result));
	}
	/* === end: sections_update === */

	/* === getcategories === */

	$getcategories_sig=array(array($xmlrpcArray, $xmlrpcInt, $xmlrpcString));
	$getcategories_doc='Returns categories';
	function getcategories($m)
	{
		global $config;
		global $xmlrpcArray;

		$v=$m->getParam(0);
		$bb_id = $v->scalarval();

		$v = $m -> getParam(1);
		$password = $v -> scalarval();

		if ($password == $config['bbcpanel']['password'])
		{
			write_file_log("getcategories: password matches");
			$categories = new xmlrpcval();
			$cat = new Category;
			$bb = new BB;

			$sql_query = "SELECT `sections` FROM `ksh_bbcpanel_bbs` WHERE `id` = '".mysql_real_escape_string($bb_id)."'";
			$result = exec_query($sql_query);
			$z = mysql_fetch_array($result);
			mysql_free_result($result);
			$sections = explode("|", stripslashes($z['sections']));

			foreach ($sections as $k => $v)
			{
				if ("subcats" == substr($v, 0, 7))
				{
					$id = substr($v, 8);
					debug ("id: ".$id);

					$sql_query = "SELECT `id`, `name`, `title`, `parent` FROM `ksh_bills_categories` WHERE `id` = '".mysql_real_escape_string($id)."'";
					$result = exec_query($sql_query);
					$row = mysql_fetch_array($result);
					mysql_free_result($result);

					$name = stripslashes($row['name']);
					$title = stripslashes($row['title']);
					write_file_log("title: ".$title.", name: ".$name);

					if (in_array("bbcpanel", $config['modules']['installed']))
					{
						write_file_log("getcategories: bbcpanel module installed");
						write_file_log("getcategories: checking title for category ".stripslashes($row['id']));

						$custom_title = $bb -> get_ctitle($bb_id, $row['id']);
						$custom_name = $bb -> get_cname($bb_id, $row['id']);
						write_file_log("custom title: ".$custom_title);

						if ("" != $custom_title && NULL != $custom_title)
						{
							write_file_log("switching title to custom");
							$title = $custom_title;

							if ("" == $custom_name || NULL == $custom_name)
								$name = transliterate($custom_title, "ru", "en");
							else
								$name = $custom_name;
						}
					}
					write_file_log("title: ".$title.", name: ".$name);

					$t = array();
					$t[] = new xmlrpcval(
						array(
							"id" => new xmlrpcval(stripslashes($row['id']), "string"),
							"parent" => new xmlrpcval(stripslashes($row['parent']), "string"),
							"name" => new xmlrpcval($name, "string"),
							"title" => new xmlrpcval($title, "string")
						), "struct");
					$categories->addArray($t);

					$subsections = $cat -> get_categories_list("ksh_bills_categories", stripslashes($row['id']));
					foreach($subsections as $subs_k => $subs_v)
					{
						$sql_query = "SELECT `id`, `name`, `title`, `parent` FROM `ksh_bills_categories` WHERE `id` = '".mysql_real_escape_string($subs_v)."'";
						$result = exec_query($sql_query);
						$row = mysql_fetch_array($result);
						mysql_free_result($result);

						$name = stripslashes($row['name']);
						$title = stripslashes($row['title']);
						write_file_log("title: ".$title.", name: ".$name);

						if (in_array("bbcpanel", $config['modules']['installed']))
						{
							write_file_log("getcategories: bbcpanel module installed");
							write_file_log("getcategories: checking title for category ".stripslashes($row['id']));

               				$custom_title = $bb -> get_ctitle($bb_id, $row['id']);
							$custom_name = $bb -> get_cname($bb_id, $row['id']);
							write_file_log("custom title: ".$custom_title);

							if ("" != $custom_title && NULL != $custom_title)
							{
								write_file_log("switching title to custom");
								$title = $custom_title;

								if ("" == $custom_name || NULL == $custom_name)
									$name = transliterate($custom_title, "ru", "en");
								else
									$name = $custom_name;
							}

						}
						write_file_log("title: ".$title);

						$t = array();
						$t[] = new xmlrpcval(
							array(
								"id" => new xmlrpcval(stripslashes($row['id']), "string"),
								"parent" => new xmlrpcval(stripslashes($row['parent']), "string"),
								"name" => new xmlrpcval($name, "string"),
								"title" => new xmlrpcval($title, "string")
							), "struct");
						$categories->addArray($t);
					}

				}
				else if(is_numeric($v))
				{
					$sql_query = "SELECT `id`, `title`, `parent` FROM `ksh_bills_categories` WHERE `id` = '".mysql_real_escape_string($v)."'";
					$result = exec_query($sql_query);
					$row = mysql_fetch_array($result);
					mysql_free_result($result);

					$title = stripslashes($row['title']);
					write_file_log("title: ".$title);

					if (in_array("bbcpanel", $config['modules']['installed']))
					{
						write_file_log("getcategories: bbcpanel module installed");
						write_file_log("getcategories: checking title for category ".stripslashes($row['id']));

           				$custom_title = $bb -> get_ctitle($bb_id, $row['id']);
						$custom_name = $bb -> get_cname($bb_id, $row['id']);
						write_file_log("custom title: ".$custom_title);

						if ("" != $custom_title && NULL != $custom_title)
						{
							write_file_log("switching title to custom");
							$title = $custom_title;

							if ("" == $custom_name || NULL == $custom_name)
								$name = transliterate($custom_title, "ru", "en");
							else
								$name = $custom_name;
						}
					}
					write_file_log("title: ".$title);

					$t = array();
					$t[] = new xmlrpcval(
						array(
							"id" => new xmlrpcval(stripslashes($row['id']), "string"),
							"parent" => new xmlrpcval(stripslashes($row['parent']), "string"),
							"name" => new xmlrpcval($name, "string"),
							"title" => new xmlrpcval($title, "string")
						), "struct");
					$categories->addArray($t);
				}
			}
		}
		else
		{
			write_file_log("password doesn't match");
			$categories = array();
		}

		
		$r = new xmlrpcresp($categories);
		return $r;
	}

	/* === end: getcategories === */

	/* === receive_element === */

	$receive_element_sig=array(array($xmlrpcInt, $xmlrpcString, $xmlrpcString, $xmlrpcString, $xmlrpcString, $xmlrpcStruct));
	$receive_element_doc='Receives element from client';
	function receive_element($m)
	{
		global $config;

		$v=$m->getParam(0);
		$password = base64_decode($v->scalarval());

		$v=$m->getParam(1);
		$table = base64_decode($v->scalarval());
		write_file_log("receive_element: table: ".$table);

		$v=$m->getParam(2);
		$type = base64_decode($v->scalarval());
		write_file_log("receive_element: type: ".$type);

		$v=$m->getParam(3);
		$if_keep_id = base64_decode($v->scalarval());
		write_file_log("receive_element: if_keep_id: ".$if_keep_id);

		$v = $m->getParam(4);
		$element = array();
		while(list($name,$value) = $v->structeach())
		{
			$value = base64_decode($value->scalarval());
			$element[$name] = $value;
			if ("password" != $name)
				write_file_log("receive_element: name: ".$name.", value: ".$value);
			else
				write_file_log("receive_element: name: ".$name.", value: ******");
		}

		/*
		write_file_log("receive_element: element password: ".$element['password']);
		write_file_log("receive_element: config password: ".$config['bbcpanel']['password']);
		*/

		if($config['bbcpanel']['password'] == $password)
		{
			write_file_log("receive_element: password matches");

			if ("insert" == $type)
			{
				$fields = "";
				$values = "";
				foreach ($element as $k => $v)
					if ($if_keep_id || (!$if_keep_id && "id" != $k))
					{
						$fields .= "`".mysql_real_escape_string($k)."`,";
						$values .= "'".mysql_real_escape_string($v)."',";
					}
				$fields = rtrim($fields, ",");
				$values = rtrim($values, ",");

				$sql_query = "INSERT INTO `".mysql_real_escape_string($table)."` (".$fields.") VALUES (".$values.")";
				write_file_log("receive_element: ".$sql_query);
				exec_query($sql_query);
			}
			else if ("update" == $type)
			{
				$fields = "";
				$values = "";
				$sql_query = "UPDATE `".mysql_real_escape_string($table)."` SET ";
				foreach ($element as $k => $v)
					$sql_query .= "`".mysql_real_escape_string($k)."` = '".mysql_real_escape_string($v)."',";
				// write_file_log("receive_element: ".$sql_query);
				$sql_query = rtrim($sql_query, ",");
				$sql_query .= " WHERE `id` = '".mysql_real_escape_string($element['id'])."'";
				// write_file_log("receive_element: ".$sql_query);
				exec_query($sql_query);
			}
		}
		else
			write_file_log("receive_element: password doesn't match");

		return new xmlrpcresp(new xmlrpcval(1, 'int'));
	}

	/* === end: receive_element === */

	/* === get_element */

	$get_element_sig=array(array($xmlrpcStruct, $xmlrpcString, $xmlrpcString, $xmlrpcString));
	$get_element_doc='Gives an element to client';
	function get_element($m)
	{
		global $config;

		$v=$m->getParam(0);
		$password = base64_decode($v->scalarval());

		$v=$m->getParam(1);
		$table = base64_decode($v->scalarval());

		$v=$m->getParam(2);
		$id = base64_decode($v->scalarval());

		$element = array();

		if($config['bbcpanel']['password'] == $password)
		{
			write_file_log("receive_element: password matches");

			$sql_query = "SELECT * FROM `".mysql_real_escape_string($table)."` WHERE `id` = '".mysql_real_escape_string($id)."'";
			$result = exec_query($sql_query);
			$row = mysql_fetch_array($result);
			mysql_free_result($result);

			foreach($row as $k => $v)
				if (!is_numeric($k))
				{
					if ("password" != $k)
						write_file_log("get_element: name: ".$k.", value: ".$v);
					else
						write_file_log("get_element: name: ".$k.", value: ******");
					$element[$k] = new xmlrpcval(base64_encode($v), "string");
				}

			$el = new xmlrpcval($element, "struct");
		}
		else
			write_file_log("receive_element: password doesn't match");

		return new xmlrpcresp($el);

	}

	/* === end: get_element === */

	/* === del_element */

	$del_element_sig=array(array($xmlrpcInt, $xmlrpcString, $xmlrpcString, $xmlrpcString));
	$del_element_doc='Deletes an element';
	function del_element($m)
	{
		global $config;

		$v=$m->getParam(0);
		$password = base64_decode($v->scalarval());

		$v=$m->getParam(1);
		$table = base64_decode($v->scalarval());

		$v=$m->getParam(2);
		$id = base64_decode($v->scalarval());

		$result = 0;

		if($config['bbcpanel']['password'] == $password)
		{
			write_file_log("del_element: password matches");

			$sql_query = "DELETE FROM `".mysql_real_escape_string($table)."` WHERE `id` = '".mysql_real_escape_string($id)."'";
			exec_query($sql_query);

			$result = 1;
		}
		else
			write_file_log("del_element: password doesn't match");

		return new xmlrpcresp(new xmlrpcval($result, "int"));

	}

	/* === end: del_element === */

	/* === get_elements_list */

	$get_elements_list_sig=array(array($xmlrpcArray, $xmlrpcString, $xmlrpcString));
	$get_elements_list_doc='Returns the list of elements in table';
	function get_elements_list($m)
	{
		global $config;

		$v=$m->getParam(0);
		$password = base64_decode($v->scalarval());

		$v=$m->getParam(1);
		$table = base64_decode($v->scalarval());

		$result = 0;

		if($config['bbcpanel']['password'] == $password)
		{
			write_file_log("get_elements_list: password matches");

			$elements = new xmlrpcval();		

			$sql_query = "SELECT `id` FROM `".mysql_real_escape_string($table)."`";
			$result = exec_query($sql_query);
			while ($row = mysql_fetch_array($result))
			{
				$t = array();
				$t[] = new xmlrpcval(
					array(
						"id" => new xmlrpcval($row['id'], "string")
					), "struct");
				$elements->addArray($t);
			}
			mysql_free_result($result);
		}
		else
		{
			write_file_log("get_elements_list: password doesn't match");
			$elements = array();
		}

		return new xmlrpcresp($elements);

	}

	/* === end: get_elements_list === */

	$o=new xmlrpc_server_methods_container;
	$a=array(
		"get_state" => array(
			"function" => "get_state",
			"signature" => $get_state_sig,
			"docstring" => $get_state_doc
		),
		"get_open_modules" => array(
			"function" => "get_open_modules",
			"signature" => $get_open_modules_sig,
			"docstring" => $get_open_modules_doc
		),
		"get_config" => array(
			"function" => "get_config",
			"signature" => $get_config_sig,
			"docstring" => $get_config_doc
		),
		"sections_update" => array(
			"function" => "sections_update",
			"signature" => $sections_update_sig,
			"docstring" => $sections_update_doc
		),
		"getcategories" => array(
			"function" => "getcategories",
			"signature" => $getcategories_sig,
			"docstring" => $getcategories_doc
		),
		"receive_element" => array(
			"function" => "receive_element",
			"signature" => $receive_element_sig,
			"docstring" => $receive_element_doc
		),
		"get_element" => array(
			"function" => "get_element",
			"signature" => $get_element_sig,
			"docstring" => $get_element_doc
		),
		"del_element" => array(
			"function" => "del_element",
			"signature" => $del_element_sig,
			"docstring" => $del_element_doc
		),
		"get_elements_list" => array(
			"function" => "get_elements_list",
			"signature" => $get_elements_list_sig,
			"docstring" => $get_elements_list_doc
		)
	);

	$s=new xmlrpc_server($a, false);
	$s->setdebug(3);
	$s->compress_response = true;


	$s->service();

?>
